import pandas as pd
import numpy as np
from sklearn.model_selection import train_test_split
from sklearn.tree import DecisionTreeRegressor, plot_tree
from sklearn.preprocessing import LabelEncoder
from sklearn.metrics import mean_squared_error, r2_score
import matplotlib.pyplot as plt

# Step 1: Load Dataset
data = pd.read_csv("employee_data.csv")
print("Dataset preview:\n", data.head())

# Step 2: Encode categorical column 'EducationLevel'
le = LabelEncoder()
data['EducationLevel'] = le.fit_transform(data['EducationLevel'])

# Step 3: Prepare features and target
X = data[['Experience', 'EducationLevel']]
y = data['Salary']

# Step 4: Split data
X_train, X_test, y_train, y_test = train_test_split(
    X, y, test_size=0.2, random_state=42
)

# Step 5: Train Decision Tree Regressor
model = DecisionTreeRegressor(random_state=0)
model.fit(X_train, y_train)

# Step 6: Make predictions
y_pred = model.predict(X_test)

# Step 7: Show predictions
results = pd.DataFrame({'Experience': X_test['Experience'],
                        'EducationLevel': X_test['EducationLevel'],
                        'Actual Salary': y_test,
                        'Predicted Salary': y_pred})
print("\nPrediction Results:\n", results)

# Step 8: Evaluate the model
mse = mean_squared_error(y_test, y_pred)
r2 = r2_score(y_test, y_pred)
print("\nMean Squared Error:", mse)
print("R2 Score:", r2)

# Step 9: Visualize Decision Tree
plt.figure(figsize=(12, 8))
plot_tree(model, feature_names=['Experience', 'EducationLevel'], filled=True)
plt.title("Decision Tree - Employee Salary Prediction")
plt.show()